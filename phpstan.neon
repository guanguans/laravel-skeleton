includes:
    - baselines/loader.neon
#    - phpstan-baseline.neon

    - vendor/spaze/phpstan-disallowed-calls/disallowed-dangerous-calls.neon
#    - vendor/spaze/phpstan-disallowed-calls/disallowed-execution-calls.neon
#    - vendor/spaze/phpstan-disallowed-calls/disallowed-insecure-calls.neon
#    - vendor/spaze/phpstan-disallowed-calls/disallowed-loose-calls.neon
#    - vendor/spaze/phpstan-disallowed-calls/extension.neon

#    - vendor-bin/larastan/vendor/larastan/larastan/extension.neon
#    - vendor/ekino/phpstan-banned-code/extension.neon
#    - vendor/ergebnis/phpstan-rules/rules.neon
#    - vendor/phpstan/phpstan-strict-rules/rules.neon
#    - vendor/roave/no-floaters/rules.neon

#    - vendor/symplify/phpstan-rules/config/code-complexity-rules.neon
#    - vendor/symplify/phpstan-rules/config/configurable-rules.neon
#    - vendor/symplify/phpstan-rules/config/naming-rules.neon
#    - vendor/symplify/phpstan-rules/config/static-rules.neon
#    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

#    - vendor/symplify/phpstan-rules/config/doctrine-rules.neon
#    - vendor/symplify/phpstan-rules/config/phpunit-rules.neon
#    - vendor/symplify/phpstan-rules/config/rector-rules.neon
#    - vendor/symplify/phpstan-rules/config/symfony-rules.neon

rules:
#    - App\Support\PHPStan\ForbiddenGlobalFunctionsRule

parameters:
    paths:
        - app/
    excludePaths:
        - app/Support/StreamWrappers/
        - app/Support/helpers.php
#    level: max
    level: 1
    tmpDir: .build/phpstan
#    errorFormat: symplify
    errorFormat: friendly
    friendly:
        lineBefore: 3
        lineAfter: 3
        editorUrl: 'phpstorm://open?file=%%file%%&line=%%line%%'
#    type_coverage:
#        declare: 100
#        return_type: 100
#        param_type: 100
#        property_type: 100
#        constant_type: 100
    disallowedFunctionCalls:
        -
            function: 'env()'
            message: 'use config() instead'
        -
            function: 'env_explode()'
            message: 'use config() instead'
        -
            function: 'env_getcsv()'
            message: 'use config() instead'
    ignoreErrors:
#        - '#^Cannot call method .*\(\) on mixed\.$#'
#        - '#^Cannot cast mixed to .*\.$#'
#        - '#^Cannot use array destructuring on mixed\.$#'
#        - '#Property .* does not accept mixed#'
#        - identifier: argument.templateType
#        - identifier: argument.type
#        - identifier: binaryOp.invalid
#        - identifier: cast.string
#        - identifier: encapsedStringPart.nonString
#        - identifier: method.nonObject
#        - identifier: missingType.generics
#        - identifier: missingType.iterableValue
#        - identifier: return.type
#        - identifier: return.void
#        - identifier: symplify.noDynamicName
#        - identifier: typePerfect.noMixedMethodCaller
        - identifier: new.static
        -
            message: '#^Calling env\(\) is forbidden, use config\(\) instead\.$#'
            path: ./app/Support/helpers.php
        -
            messages:
                - '#^Access to an undefined property App\\Support\\Mixins\\.*Mixin\:\:\$.*\.$#'
                - '#^Call to protected method .*\(\) of class Illuminate\\.*\.$#'
                - '#^Call to protected static method this\(\) of class .*\\.*\.$#'
                - '#^Method App\\Support\\Mixins\\.*Mixin\:\:.*\(\) invoked with \d parameters, 0 required\.$#'
                - '#^Undefined variable\: \$this$#'
            path: app/Support/Mixins/
#        -
#            identifier: return.missing
#            path: app/Support/StreamWrappers/

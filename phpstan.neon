includes:
    - baselines/loader.neon
#    - phpstan-baseline.neon

    - vendor/spaze/phpstan-disallowed-calls/disallowed-dangerous-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-execution-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-insecure-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-loose-calls.neon
#    - vendor/spaze/phpstan-disallowed-calls/extension.neon

#    - vendor-bin/larastan/vendor/larastan/larastan/extension.neon
#    - vendor/ekino/phpstan-banned-code/extension.neon
#    - vendor/ergebnis/phpstan-rules/rules.neon
#    - vendor/phpstan/phpstan-strict-rules/rules.neon
#    - vendor/roave/no-floaters/rules.neon
#    - vendor/shipmonk/dead-code-detector/rules.neon
#    - vendor/staabm/phpstan-todo-by/extension.neon

#    - vendor/symplify/phpstan-rules/config/code-complexity-rules.neon
#    - vendor/symplify/phpstan-rules/config/configurable-rules.neon
#    - vendor/symplify/phpstan-rules/config/naming-rules.neon
#    - vendor/symplify/phpstan-rules/config/static-rules.neon
#    - vendor/symplify/phpstan-rules/config/symplify-rules.neon

#    - vendor/symplify/phpstan-rules/config/doctrine-rules.neon
#    - vendor/symplify/phpstan-rules/config/phpunit-rules.neon
#    - vendor/symplify/phpstan-rules/config/rector-rules.neon
#    - vendor/symplify/phpstan-rules/config/symfony-rules.neon

rules:
#    - App\Support\PHPStan\ForbiddenGlobalFunctionsRule

# https://phpstan.org/writing-php-code/phpdoc-types
parameters:
    paths:
        - app/
        - bootstrap/app.php
        - bootstrap/providers.php
        - config/
        - database/
        - public/
        - resources/
        - routes/
#        - tests/
    excludePaths:
        - app/Support/StreamWrappers/
        - app/Support/Rectors/RenameToPsrNameRector.php
        - *.blade.php
    level: max
#    level: 10
    tmpDir: .build/phpstan/
    editorUrl: 'phpstorm://open?file=%%file%%&line=%%line%%'
#    errorFormat: symplify
    errorFormat: friendly
    friendly:
        lineBefore: 3
        lineAfter: 3
        editorUrl: 'phpstorm://open?file=%%file%%&line=%%line%%'
    treatPhpDocTypesAsCertain: false
    cognitive_complexity:
        class: 42
        function: 12
        dependency_tree: 150
        dependency_tree_types:
            # only these explicit types are checked, nothing else
#            - Rector\Contract\Rector\RectorInterface
    type_coverage:
        declare: 100
        param_type: 100
        return_type: 100
        constant_type: 100
        property_type: 100
    type_perfect:
        narrow_param: true
        narrow_return: true
        null_over_false: true
        no_mixed: true
        no_mixed_property: true
        no_mixed_caller: true
    disallowedFunctionCalls:
        -
            function: 'env_explode()'
            message: 'use config() instead'
        -
            function: 'env_getcsv()'
            message: 'use config() instead'
        -
            function: 'env_json_decode()'
            message: 'use config() instead'
    ignoreErrors:
#        - identifier: return.void
#        - identifier: staticClassAccess.privateProperty
#        - identifier: symplify.noDynamicName
        - identifier: argument.templateType
        - identifier: argument.type
        - identifier: assign.propertyType
        - identifier: binaryOp.invalid
        - identifier: cast.string
        - identifier: encapsedStringPart.nonString
        - identifier: logicalAnd.resultUnused
        - identifier: logicalOr.resultUnused
        - identifier: method.nonObject
        - identifier: method.unused
        - identifier: missingType.generics
        - identifier: missingType.iterableValue
        - identifier: offsetAccess.nonOffsetAccessible
        - identifier: return.type
        - identifier: trait.unused
        - identifier: typePerfect.narrowPublicClassMethodParamType
        - identifier: typePerfect.noArrayAccessOnObject
        - identifier: typePerfect.noMixedMethodCaller
        - identifier: typePerfect.noMixedPropertyFetcher
        - '#^Call to an undefined method Illuminate\\.*Guard\:\:refresh\(\)\.$#'
        - '#^Call to an undefined method Illuminate\\Auth\\AuthManager\:\:factory\(\)\.$#'
        - '#^Call to function is_subclass_of\(\) with class\-string and string will always evaluate to true\.$#'
        - '#^Cognitive complexity for "user_http_build_query\(\)" is 24, keep it under 12$#'
        -
            identifier: larastan.noEnvCallsOutsideOfConfig
            count: 3
            path: app/Support/helpers.php
        -
            message: '#^Calling env_explode\(\) is forbidden, use config\(\) instead\.$#'
            path: config/logging.php
        -
            identifier: typeCoverage.paramTypeCoverage
            count: 5
            path: app/Models/Example.php
        -
            identifier: new.static
            paths:
                - app/Models/BaseModel.php
                - app/Rules/Rule.php
        -
            messages:
                - '#^Parameter \$class of method App\\Support\\Attributes\\Mixin\:\:__construct\(\) has invalid type Illuminate\\Support\\Traits\\Macroable\.$#'
                - '#^Property App\\Support\\Attributes\\Mixin\:\:\$class has invalid type Illuminate\\Support\\Traits\\Macroable\.$#'
            path: app/Support/Attributes/Mixin.php
        -
            messages:
                - '#^Access to an undefined property App\\Support\\Mixins\\.*Mixin\:\:\$.*\.$#'
                - '#^Call to protected method .*\(\) of class Illuminate\\.*\.$#'
                - '#^Call to protected static method this\(\) of class .*\\.*\.$#'
                - '#^Class App\\Support\\Mixins\\.*Mixin does not have a constructor and must be instantiated without any parameters\.$#'
                - '#^Method App\\Support\\Mixins\\.*Mixin\:\:.*\(\) invoked with \d parameters?, 0 required\.$#'
                - '#^PHPDoc tag @var with type .* is not subtype of native type .*\.$#'
                - '#^Undefined variable\: \$this$#'
            path: app/Support/Mixins/

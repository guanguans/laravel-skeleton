openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://laravel-skeleton.test'
paths:
  /api/v1/auth/register:
    post:
      summary: 'register - 注册'
      operationId: register
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: 'Http ok'
                  data:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                    token_type: bearer
                    expires_in: 3600
                  error: {  }
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Http ok'
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                      token_type:
                        type: string
                        example: bearer
                      expires_in:
                        type: integer
                        example: 3600
                  error:
                    type: object
                    properties: {  }
      tags:
        - 'Auth - 认证接口管理'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 邮箱。
                  example: ofelia.rogahn@example.com
                password:
                  type: string
                  description: 密码。
                  example: 'x~gpzR:]''@Ou"`12T:}'
                password_confirmation:
                  type: string
                  description: 重复密码。
                  example: at
      security: []
  /api/v1/auth/login:
    post:
      summary: 'login - 登录'
      operationId: login
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: 'Http ok'
                  data:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                    token_type: bearer
                    expires_in: 3600
                  error: {  }
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Http ok'
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                      token_type:
                        type: string
                        example: bearer
                      expires_in:
                        type: integer
                        example: 3600
                  error:
                    type: object
                    properties: {  }
      tags:
        - 'Auth - 认证接口管理'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 邮箱。
                  example: kennedy.kessler@example.net
                password:
                  type: string
                  description: 密码。
                  example: '$QPR~#k08W>E'
      security: []
  /api/v1/auth/logout:
    post:
      summary: 'logout - 退出'
      operationId: logout
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: 退出成功
                  data: {  }
                  error: {  }
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 退出成功
                  data:
                    type: object
                    properties: {  }
                  error:
                    type: object
                    properties: {  }
      tags:
        - 'Auth - 认证接口管理'
      security: []
  /api/v1/auth/refresh:
    post:
      summary: 'refresh - 重刷 token'
      operationId: refreshToken
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: 'Http ok'
                  data:
                    access_token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                    token_type: bearer
                    expires_in: 3600
                  error: {  }
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Http ok'
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...
                      token_type:
                        type: string
                        example: bearer
                      expires_in:
                        type: integer
                        example: 3600
                  error:
                    type: object
                    properties: {  }
      tags:
        - 'Auth - 认证接口管理'
      security: []
  /api/v1/auth/me:
    get:
      summary: 'me - 用户信息'
      operationId: me
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: 'Http ok'
                  data:
                    id: 1
                    name: admin
                    email: admin@admin.com
                    email_verified_at: '2021-11-10T07:56:41.000000Z'
                    created_at: '2021-11-10T07:56:41.000000Z'
                    updated_at: '2021-11-10T07:56:41.000000Z'
                  error: {  }
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Http ok'
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 1
                      name:
                        type: string
                        example: admin
                      email:
                        type: string
                        example: admin@admin.com
                      email_verified_at:
                        type: string
                        example: '2021-11-10T07:56:41.000000Z'
                      created_at:
                        type: string
                        example: '2021-11-10T07:56:41.000000Z'
                      updated_at:
                        type: string
                        example: '2021-11-10T07:56:41.000000Z'
                  error:
                    type: object
                    properties: {  }
      tags:
        - 'Auth - 认证接口管理'
      security: []
  /api/v1/auth/index:
    get:
      summary: 'index - 用户列表'
      operationId: index
      description: ''
      parameters:
        -
          in: query
          name: per_page
          description: '分页大小. 默认值 15.'
          example: 16
          required: false
          schema:
            type: integer
            description: '分页大小. 默认值 15.'
            example: 16
        -
          in: query
          name: page
          description: '第几页. 默认值 1.'
          example: 16
          required: false
          schema:
            type: integer
            description: '第几页. 默认值 1.'
            example: 16
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: 'Http ok'
                  data:
                    data:
                      -
                        id: 2
                        name: 'Kenyatta Roberts'
                        email: wintheiser.laron@example.com
                        created_at: '2021-11-10T07:56:41.000000Z'
                        updated_at: '2021-11-10T07:56:41.000000Z'
                    meta:
                      pagination:
                        total: 0
                        count: 2
                        per_page: '1'
                        current_page: 2
                        total_pages: 0
                  error: {  }
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'Http ok'
                  data:
                    type: object
                    properties:
                      data:
                        type: array
                        example:
                          -
                            id: 2
                            name: 'Kenyatta Roberts'
                            email: wintheiser.laron@example.com
                            created_at: '2021-11-10T07:56:41.000000Z'
                            updated_at: '2021-11-10T07:56:41.000000Z'
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 2
                            name:
                              type: string
                              example: 'Kenyatta Roberts'
                            email:
                              type: string
                              example: wintheiser.laron@example.com
                            created_at:
                              type: string
                              example: '2021-11-10T07:56:41.000000Z'
                            updated_at:
                              type: string
                              example: '2021-11-10T07:56:41.000000Z'
                      meta:
                        type: object
                        properties:
                          pagination:
                            type: object
                            properties:
                              total:
                                type: integer
                                example: 0
                              count:
                                type: integer
                                example: 2
                              per_page:
                                type: string
                                example: '1'
                              current_page:
                                type: integer
                                example: 2
                              total_pages:
                                type: integer
                                example: 0
                  error:
                    type: object
                    properties: {  }
      tags:
        - 'Auth - 认证接口管理'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                per_page:
                  type: integer
                  description: 'Must be at least 5. Must not be greater than 50.'
                  example: 7
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 66
      security: []
  '/api/asetting/getValue/{group}/{key}':
    get:
      summary: ''
      operationId: getApiAsettingGetValueGroupKey
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: laboriosam
                key:
                  type: string
                  description: ''
                  example: soluta
              required:
                - group
                - key
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: key
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/asetting/getTitle/{group}/{key}':
    get:
      summary: ''
      operationId: getApiAsettingGetTitleGroupKey
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: incidunt
                key:
                  type: string
                  description: ''
                  example: voluptas
              required:
                - group
                - key
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
      -
        in: path
        name: key
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
  '/api/asetting/get/{group}/{key}':
    get:
      summary: ''
      operationId: getApiAsettingGetGroupKey
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: iure
                key:
                  type: string
                  description: ''
                  example: natus
              required:
                - group
                - key
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: cum
        required: true
        schema:
          type: string
      -
        in: path
        name: key
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/asetting/isVisible/{group}/{key}':
    get:
      summary: ''
      operationId: getApiAsettingIsVisibleGroupKey
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: laborum
                key:
                  type: string
                  description: ''
                  example: quas
              required:
                - group
                - key
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: key
        description: ''
        example: voluptatibus
        required: true
        schema:
          type: string
  '/api/asetting/delete/{group}/{key}':
    delete:
      summary: ''
      operationId: deleteApiAsettingDeleteGroupKey
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: enim
                key:
                  type: string
                  description: ''
                  example: quia
              required:
                - group
                - key
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: key
        description: ''
        example: beatae
        required: true
        schema:
          type: string
  '/api/asetting/destroy/{group}':
    delete:
      summary: ''
      operationId: deleteApiAsettingDestroyGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: voluptatum
              required:
                - group
      security: []
    parameters:
      -
        in: path
        name: group
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/asetting/all/{group}':
    get:
      summary: ''
      operationId: getApiAsettingAllGroup
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthorized
                properties:
                  message:
                    type: string
                    example: Unauthorized
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: cumque
      security: []
    parameters:
      -
        in: path
        name: group
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: modi
  /api/asetting/getValues:
    post:
      summary: ''
      operationId: postApiAsettingGetValues
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: reprehenderit
                keys:
                  type: object
                  description: ''
                  example: []
                  properties: {  }
              required:
                - group
                - keys
      security: []
  /api/asetting/add:
    post:
      summary: ''
      operationId: postApiAsettingAdd
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: est
                key:
                  type: string
                  description: ''
                  example: repellendus
                value:
                  type: string
                  description: ''
                  example: nihil
                type:
                  type: string
                  description: ''
                  example: fugit
                title:
                  type: string
                  description: ''
                  example: ea
                is_visible:
                  type: boolean
                  description: ''
                  example: true
              required:
                - group
                - key
                - value
                - type
                - title
      security: []
  /api/asetting/set:
    put:
      summary: ''
      operationId: putApiAsettingSet
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group:
                  type: string
                  description: ''
                  example: blanditiis
                key:
                  type: string
                  description: ''
                  example: similique
                value:
                  type: string
                  description: ''
                  example: itaque
                title:
                  type: string
                  description: ''
                  example: enim
                is_visible:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group
                - key
                - value
      security: []
  /api/any:
    get:
      summary: ''
      operationId: getApiAny
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  method: GET
                  headers:
                    host:
                      - laravel-skeleton.test
                    user-agent:
                      - Symfony
                    accept:
                      - application/json
                    accept-language:
                      - 'en-us,en;q=0.5'
                    accept-charset:
                      - 'ISO-8859-1,utf-8;q=0.7,*;q=0.7'
                    content-type:
                      - application/json
                  query: []
                  post: []
                  FILES: []
                  files: []
                  cookie: []
                properties:
                  method:
                    type: string
                    example: GET
                  headers:
                    type: object
                    properties:
                      host:
                        type: array
                        example:
                          - laravel-skeleton.test
                        items:
                          type: string
                      user-agent:
                        type: array
                        example:
                          - Symfony
                        items:
                          type: string
                      accept:
                        type: array
                        example:
                          - application/json
                        items:
                          type: string
                      accept-language:
                        type: array
                        example:
                          - 'en-us,en;q=0.5'
                        items:
                          type: string
                      accept-charset:
                        type: array
                        example:
                          - 'ISO-8859-1,utf-8;q=0.7,*;q=0.7'
                        items:
                          type: string
                      content-type:
                        type: array
                        example:
                          - application/json
                        items:
                          type: string
                  query:
                    type: array
                    example: []
                  post:
                    type: array
                    example: []
                  FILES:
                    type: array
                    example: []
                  files:
                    type: array
                    example: []
                  cookie:
                    type: array
                    example: []
      tags:
        - Endpoints
      security: []
  /api/user:
    get:
      summary: ''
      operationId: getApiUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: error
                  code: 401
                  message: Unauthenticated.
                  data: {  }
                  error: {  }
                properties:
                  status:
                    type: string
                    example: error
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: Unauthenticated.
                  data:
                    type: object
                    properties: {  }
                  error:
                    type: object
                    properties: {  }
      tags:
        - Endpoints
      security: []
  '/api/v1/ping/{is_bad}':
    get:
      summary: 'ping - 示例接口'
      operationId: ping
      description: ''
      parameters:
        -
          in: query
          name: is_bad
          description: '错误请求示例. 默认值 0.'
          example: 20
          required: false
          schema:
            type: integer
            description: '错误请求示例. 默认值 0.'
            example: 20
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  status: success
                  code: 200
                  message: 'This is a successful example.'
                  data: {  }
                  error: {  }
                properties:
                  status:
                    type: string
                    example: success
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 'This is a successful example.'
                  data:
                    type: object
                    properties: {  }
                  error:
                    type: object
                    properties: {  }
      tags:
        - 'Ping - 示例接口管理'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_bad:
                  type: integer
                  description: '错误请求示例. 默认值 0.'
                  example: 20
      security: []
    parameters:
      -
        in: path
        name: is_bad
        description: 'Optional parameter. 错误请求示例. 默认值 0.'
        required: true
        schema:
          type: integer
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: 11
tags:
  -
    name: 'Auth - 认证接口管理'
    description: ''
  -
    name: Endpoints
    description: ''
  -
    name: 'Ping - 示例接口管理'
    description: ''
